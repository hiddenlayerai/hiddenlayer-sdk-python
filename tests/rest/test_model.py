# coding: utf-8

"""
    HiddenLayer Sensor SOR

    HiddenLayer Sensor SOR API for operations to sensor data storage

    The version of the OpenAPI document: 1
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from hiddenlayer.sdk.rest.models.model import Model

class TestModel(unittest.TestCase):
    """Model unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> Model:
        """Test Model
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `Model`
        """
        model = Model()
        if include_optional:
            return Model(
                model_id = '',
                tenant_id = '',
                name = 'loan application',
                source = 'azure',
                versions = [
                    hiddenlayer.sdk.rest.models.model_version.Model Version(
                        model_version_id = '', 
                        version = '1', 
                        tags = {"env":"staging","owner":"research"}, 
                        locations = {"hl_s3":"https://hl-tenant-models.s3.amazonaws.com/03289d66-71ab-11ee-b530-7ecb4245a394/12345678-1234-1234-1234-123456789012/87654321-4321-4321-4321-210987654321/model","azure":"https://myaccount.blob.core.windows.net/mycontainer/myvirtualdirectory/model"}, 
                        multi_file = True, 
                        retrievable = True, )
                    ]
            )
        else:
            return Model(
                name = 'loan application',
                source = 'azure',
        )
        """

    def testModel(self):
        """Test Model"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
