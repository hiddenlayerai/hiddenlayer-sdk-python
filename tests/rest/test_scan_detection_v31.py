# coding: utf-8

"""
    HiddenLayer-API

    HiddenLayer-API

    The version of the OpenAPI document: 1
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from hiddenlayer.sdk.rest.models.scan_detection_v31 import ScanDetectionV31

class TestScanDetectionV31(unittest.TestCase):
    """ScanDetectionV31 unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> ScanDetectionV31:
        """Test ScanDetectionV31
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `ScanDetectionV31`
        """
        model = ScanDetectionV31()
        if include_optional:
            return ScanDetectionV31(
                detection_id = '00000000-0000-0000-0000-000000000000',
                rule_id = 'PICKLE_0055_202408',
                risk = 'MALICIOUS',
                category = 'Arbitrary Code Execution',
                description = 'Found lambda embedded in keras model allowing custom layers that support  arbitrary expression execution',
                likelihood = 'medium',
                impact = 'critical',
                severity = 'low',
                rule_details = [
                    hiddenlayer.sdk.rest.models.rule_details_inner.Rule_Details_inner(
                        status = 'created', 
                        status_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                        description = '', )
                    ],
                mitre_atlas = [
                    hiddenlayer.sdk.rest.models.mitre_atlas_inner.MITRE_Atlas_inner(
                        technique = 'AML.T0480Z#UM/?R,Fp^l6$ARjbhJk C>i H'qT\\{<?'es#)#iK.YM{Rag2/!KB!k@5oXh.:Ts\";mGL,i&z5[', 
                        tactic = 'AML.TA4807', )
                    ],
                owasp = [
                    'LLM8072'
                    ],
                cve = [
                    'CVE-0480-288800152'
                    ],
                cwe = '',
                cwe_href = '',
                technical_blog_hrefs = [
                    ''
                    ],
                technical_blog_href = ''
            )
        else:
            return ScanDetectionV31(
                detection_id = '00000000-0000-0000-0000-000000000000',
                rule_id = 'PICKLE_0055_202408',
                category = 'Arbitrary Code Execution',
                description = 'Found lambda embedded in keras model allowing custom layers that support  arbitrary expression execution',
                likelihood = 'medium',
                impact = 'critical',
                severity = 'low',
                mitre_atlas = [
                    hiddenlayer.sdk.rest.models.mitre_atlas_inner.MITRE_Atlas_inner(
                        technique = 'AML.T0480Z#UM/?R,Fp^l6$ARjbhJk C>i H'qT\\{<?'es#)#iK.YM{Rag2/!KB!k@5oXh.:Ts\";mGL,i&z5[', 
                        tactic = 'AML.TA4807', )
                    ],
                owasp = [
                    'LLM8072'
                    ],
                cve = [
                    'CVE-0480-288800152'
                    ],
                cwe = '',
                cwe_href = '',
        )
        """

    def testScanDetectionV31(self):
        """Test ScanDetectionV31"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
