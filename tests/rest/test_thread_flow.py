# coding: utf-8

"""
    HiddenLayer-API

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: 1
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from hiddenlayer.sdk.rest.models.thread_flow import ThreadFlow

class TestThreadFlow(unittest.TestCase):
    """ThreadFlow unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> ThreadFlow:
        """Test ThreadFlow
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `ThreadFlow`
        """
        model = ThreadFlow()
        if include_optional:
            return ThreadFlow(
                id = '',
                message = hiddenlayer.sdk.rest.models.message.message(
                    text = '', 
                    markdown = '', 
                    id = '', 
                    arguments = [
                        ''
                        ], 
                    properties = { }, ),
                initial_state = {
                    'key' : hiddenlayer.sdk.rest.models.multiformat_message_string.multiformatMessageString(
                        text = '', 
                        markdown = '', 
                        properties = { }, )
                    },
                immutable_state = {
                    'key' : hiddenlayer.sdk.rest.models.multiformat_message_string.multiformatMessageString(
                        text = '', 
                        markdown = '', 
                        properties = { }, )
                    },
                locations = [
                    hiddenlayer.sdk.rest.models.thread_flow_location.threadFlowLocation(
                        index = -1, 
                        location = hiddenlayer.sdk.rest.models.location.location(
                            id = -1, 
                            physical_location = hiddenlayer.sdk.rest.models.physical_location.physicalLocation(
                                address = hiddenlayer.sdk.rest.models.address.address(
                                    absolute_address = -1, 
                                    relative_address = 56, 
                                    length = 56, 
                                    kind = '', 
                                    name = '', 
                                    fully_qualified_name = '', 
                                    offset_from_parent = 56, 
                                    index = -1, 
                                    parent_index = -1, 
                                    properties = { }, ), 
                                artifact_location = hiddenlayer.sdk.rest.models.artifact_location.artifactLocation(
                                    uri = '', 
                                    uri_base_id = '', 
                                    index = -1, 
                                    description = hiddenlayer.sdk.rest.models.message.message(
                                        text = '', 
                                        markdown = '', 
                                        id = '', 
                                        arguments = [
                                            ''
                                            ], ), ), 
                                region = hiddenlayer.sdk.rest.models.region.region(
                                    start_line = 1, 
                                    start_column = 1, 
                                    end_line = 1, 
                                    end_column = 1, 
                                    char_offset = -1, 
                                    char_length = 0, 
                                    byte_offset = -1, 
                                    byte_length = 0, 
                                    snippet = hiddenlayer.sdk.rest.models.artifact_content.artifactContent(
                                        text = '', 
                                        binary = '', 
                                        rendered = hiddenlayer.sdk.rest.models.multiformat_message_string.multiformatMessageString(
                                            text = '', 
                                            markdown = '', ), ), 
                                    source_language = '', ), 
                                context_region = hiddenlayer.sdk.rest.models.region.region(
                                    start_line = 1, 
                                    start_column = 1, 
                                    end_line = 1, 
                                    end_column = 1, 
                                    char_offset = -1, 
                                    char_length = 0, 
                                    byte_offset = -1, 
                                    byte_length = 0, 
                                    source_language = '', ), 
                                properties = { }, ), 
                            logical_locations = [
                                hiddenlayer.sdk.rest.models.logical_location.logicalLocation(
                                    name = '', 
                                    index = -1, 
                                    fully_qualified_name = '', 
                                    decorated_name = '', 
                                    parent_index = -1, 
                                    kind = '', )
                                ], 
                            message = hiddenlayer.sdk.rest.models.message.message(
                                text = '', 
                                markdown = '', 
                                id = '', ), 
                            annotations = [
                                
                                ], 
                            relationships = [
                                hiddenlayer.sdk.rest.models.location_relationship.locationRelationship(
                                    target = 0, 
                                    kinds = [
                                        ''
                                        ], )
                                ], 
                            properties = , ), 
                        stack = hiddenlayer.sdk.rest.models.stack.stack(
                            frames = [
                                hiddenlayer.sdk.rest.models.stack_frame.stackFrame(
                                    module = '', 
                                    thread_id = 56, 
                                    parameters = [
                                        ''
                                        ], )
                                ], ), 
                        kinds = [
                            ''
                            ], 
                        taxa = [
                            hiddenlayer.sdk.rest.models.reporting_descriptor_reference.reportingDescriptorReference(
                                id = '', 
                                index = -1, 
                                guid = '62ECB020-8429-10cc-81FF-CCfeEe150AC3', 
                                tool_component = hiddenlayer.sdk.rest.models.tool_component_reference.toolComponentReference(
                                    name = '', 
                                    index = -1, 
                                    guid = '62ECB020-8429-10cc-81FF-CCfeEe150AC3', ), )
                            ], 
                        module = '', 
                        state = {
                            'key' : hiddenlayer.sdk.rest.models.multiformat_message_string.multiformatMessageString(
                                text = '', 
                                markdown = '', )
                            }, 
                        nesting_level = 0, 
                        execution_order = -1, 
                        execution_time_utc = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                        importance = 'important', 
                        web_request = hiddenlayer.sdk.rest.models.web_request.webRequest(
                            index = -1, 
                            protocol = '', 
                            version = '', 
                            target = '', 
                            method = '', 
                            headers = {
                                'key' : ''
                                }, 
                            body = hiddenlayer.sdk.rest.models.artifact_content.artifactContent(
                                text = '', 
                                binary = '', ), ), 
                        web_response = hiddenlayer.sdk.rest.models.web_response.webResponse(
                            index = -1, 
                            protocol = '', 
                            version = '', 
                            status_code = 56, 
                            reason_phrase = '', 
                            no_response_received = True, ), 
                        properties = , )
                    ],
                properties = { }
            )
        else:
            return ThreadFlow(
                locations = [
                    hiddenlayer.sdk.rest.models.thread_flow_location.threadFlowLocation(
                        index = -1, 
                        location = hiddenlayer.sdk.rest.models.location.location(
                            id = -1, 
                            physical_location = hiddenlayer.sdk.rest.models.physical_location.physicalLocation(
                                address = hiddenlayer.sdk.rest.models.address.address(
                                    absolute_address = -1, 
                                    relative_address = 56, 
                                    length = 56, 
                                    kind = '', 
                                    name = '', 
                                    fully_qualified_name = '', 
                                    offset_from_parent = 56, 
                                    index = -1, 
                                    parent_index = -1, 
                                    properties = { }, ), 
                                artifact_location = hiddenlayer.sdk.rest.models.artifact_location.artifactLocation(
                                    uri = '', 
                                    uri_base_id = '', 
                                    index = -1, 
                                    description = hiddenlayer.sdk.rest.models.message.message(
                                        text = '', 
                                        markdown = '', 
                                        id = '', 
                                        arguments = [
                                            ''
                                            ], ), ), 
                                region = hiddenlayer.sdk.rest.models.region.region(
                                    start_line = 1, 
                                    start_column = 1, 
                                    end_line = 1, 
                                    end_column = 1, 
                                    char_offset = -1, 
                                    char_length = 0, 
                                    byte_offset = -1, 
                                    byte_length = 0, 
                                    snippet = hiddenlayer.sdk.rest.models.artifact_content.artifactContent(
                                        text = '', 
                                        binary = '', 
                                        rendered = hiddenlayer.sdk.rest.models.multiformat_message_string.multiformatMessageString(
                                            text = '', 
                                            markdown = '', ), ), 
                                    source_language = '', ), 
                                context_region = hiddenlayer.sdk.rest.models.region.region(
                                    start_line = 1, 
                                    start_column = 1, 
                                    end_line = 1, 
                                    end_column = 1, 
                                    char_offset = -1, 
                                    char_length = 0, 
                                    byte_offset = -1, 
                                    byte_length = 0, 
                                    source_language = '', ), 
                                properties = { }, ), 
                            logical_locations = [
                                hiddenlayer.sdk.rest.models.logical_location.logicalLocation(
                                    name = '', 
                                    index = -1, 
                                    fully_qualified_name = '', 
                                    decorated_name = '', 
                                    parent_index = -1, 
                                    kind = '', )
                                ], 
                            message = hiddenlayer.sdk.rest.models.message.message(
                                text = '', 
                                markdown = '', 
                                id = '', ), 
                            annotations = [
                                
                                ], 
                            relationships = [
                                hiddenlayer.sdk.rest.models.location_relationship.locationRelationship(
                                    target = 0, 
                                    kinds = [
                                        ''
                                        ], )
                                ], 
                            properties = , ), 
                        stack = hiddenlayer.sdk.rest.models.stack.stack(
                            frames = [
                                hiddenlayer.sdk.rest.models.stack_frame.stackFrame(
                                    module = '', 
                                    thread_id = 56, 
                                    parameters = [
                                        ''
                                        ], )
                                ], ), 
                        kinds = [
                            ''
                            ], 
                        taxa = [
                            hiddenlayer.sdk.rest.models.reporting_descriptor_reference.reportingDescriptorReference(
                                id = '', 
                                index = -1, 
                                guid = '62ECB020-8429-10cc-81FF-CCfeEe150AC3', 
                                tool_component = hiddenlayer.sdk.rest.models.tool_component_reference.toolComponentReference(
                                    name = '', 
                                    index = -1, 
                                    guid = '62ECB020-8429-10cc-81FF-CCfeEe150AC3', ), )
                            ], 
                        module = '', 
                        state = {
                            'key' : hiddenlayer.sdk.rest.models.multiformat_message_string.multiformatMessageString(
                                text = '', 
                                markdown = '', )
                            }, 
                        nesting_level = 0, 
                        execution_order = -1, 
                        execution_time_utc = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                        importance = 'important', 
                        web_request = hiddenlayer.sdk.rest.models.web_request.webRequest(
                            index = -1, 
                            protocol = '', 
                            version = '', 
                            target = '', 
                            method = '', 
                            headers = {
                                'key' : ''
                                }, 
                            body = hiddenlayer.sdk.rest.models.artifact_content.artifactContent(
                                text = '', 
                                binary = '', ), ), 
                        web_response = hiddenlayer.sdk.rest.models.web_response.webResponse(
                            index = -1, 
                            protocol = '', 
                            version = '', 
                            status_code = 56, 
                            reason_phrase = '', 
                            no_response_received = True, ), 
                        properties = , )
                    ],
        )
        """

    def testThreadFlow(self):
        """Test ThreadFlow"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
