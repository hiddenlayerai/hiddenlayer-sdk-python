# coding: utf-8

"""
    HiddenLayer-API

    HiddenLayer-API

    The version of the OpenAPI document: 1
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from hiddenlayer.sdk.rest.models.fix import Fix

class TestFix(unittest.TestCase):
    """Fix unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> Fix:
        """Test Fix
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `Fix`
        """
        model = Fix()
        if include_optional:
            return Fix(
                description = hiddenlayer.sdk.rest.models.message.message(
                    text = '', 
                    markdown = '', 
                    id = '', 
                    arguments = [
                        ''
                        ], 
                    properties = { }, ),
                artifact_changes = [
                    hiddenlayer.sdk.rest.models.artifact_change.artifactChange(
                        artifact_location = hiddenlayer.sdk.rest.models.artifact_location.artifactLocation(
                            uri = '', 
                            uri_base_id = '', 
                            index = -1, 
                            description = hiddenlayer.sdk.rest.models.message.message(
                                text = '', 
                                markdown = '', 
                                id = '', 
                                arguments = [
                                    ''
                                    ], 
                                properties = { }, ), 
                            properties = { }, ), 
                        replacements = [
                            hiddenlayer.sdk.rest.models.replacement.replacement(
                                deleted_region = hiddenlayer.sdk.rest.models.region.region(
                                    start_line = 1, 
                                    start_column = 1, 
                                    end_line = 1, 
                                    end_column = 1, 
                                    char_offset = -1, 
                                    char_length = 0, 
                                    byte_offset = -1, 
                                    byte_length = 0, 
                                    snippet = hiddenlayer.sdk.rest.models.artifact_content.artifactContent(
                                        text = '', 
                                        binary = '', 
                                        rendered = hiddenlayer.sdk.rest.models.multiformat_message_string.multiformatMessageString(
                                            text = '', 
                                            markdown = '', ), ), 
                                    source_language = '', ), 
                                inserted_content = hiddenlayer.sdk.rest.models.artifact_content.artifactContent(
                                    text = '', 
                                    binary = '', ), )
                            ], 
                        properties = , )
                    ],
                properties = { }
            )
        else:
            return Fix(
                artifact_changes = [
                    hiddenlayer.sdk.rest.models.artifact_change.artifactChange(
                        artifact_location = hiddenlayer.sdk.rest.models.artifact_location.artifactLocation(
                            uri = '', 
                            uri_base_id = '', 
                            index = -1, 
                            description = hiddenlayer.sdk.rest.models.message.message(
                                text = '', 
                                markdown = '', 
                                id = '', 
                                arguments = [
                                    ''
                                    ], 
                                properties = { }, ), 
                            properties = { }, ), 
                        replacements = [
                            hiddenlayer.sdk.rest.models.replacement.replacement(
                                deleted_region = hiddenlayer.sdk.rest.models.region.region(
                                    start_line = 1, 
                                    start_column = 1, 
                                    end_line = 1, 
                                    end_column = 1, 
                                    char_offset = -1, 
                                    char_length = 0, 
                                    byte_offset = -1, 
                                    byte_length = 0, 
                                    snippet = hiddenlayer.sdk.rest.models.artifact_content.artifactContent(
                                        text = '', 
                                        binary = '', 
                                        rendered = hiddenlayer.sdk.rest.models.multiformat_message_string.multiformatMessageString(
                                            text = '', 
                                            markdown = '', ), ), 
                                    source_language = '', ), 
                                inserted_content = hiddenlayer.sdk.rest.models.artifact_content.artifactContent(
                                    text = '', 
                                    binary = '', ), )
                            ], 
                        properties = , )
                    ],
        )
        """

    def testFix(self):
        """Test Fix"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
